@page "/register"
@using BlazorMauiApp1.Services
@inject IAuthService AuthService
@inject IMauiNavigationService MauiNavigation

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-12 col-md-6 col-lg-4">
            <div class="card shadow-lg border-0">
                <div class="card-body p-5">
                    <div class="text-center mb-4">
                        <h2 class="fw-bold text-primary mb-2">Create Account</h2>
                        <p class="text-muted">Sign up with your email and password</p>
                    </div>
                    <EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="mb-3">
                            <InputText @bind-Value="registerModel.Email" class="form-control" placeholder="Email" />
                        </div>
                        <div class="mb-3">
                            <InputText @bind-Value="registerModel.Password" class="form-control" type="password" placeholder="Password" />
                        </div>
                        <div class="d-grid mb-2">
                            <button class="btn btn-primary btn-lg" type="submit" disabled="@isLoading">Register</button>
                        </div>
                    </EditForm>
                    <div class="d-flex justify-content-between mt-2">
                        <a href="#" @onclick="GoToLogin">Already have an account? Login</a>
                    </div>
                    @if (!string.IsNullOrEmpty(message))
                    {
                        <div class="alert alert-info mt-3" role="alert">
                            @message
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private RegisterModel registerModel = new();
    private string? message;
    private bool isLoading = false;

    private async Task HandleRegister()
    {
        isLoading = true;
        message = null;
        StateHasChanged();
        var result = await AuthService.RegisterAsync(registerModel.Email, registerModel.Password);
        if (result)
        {
            message = "Registration successful! Please check your email to confirm.";
            await Task.Delay(1500);
            MauiNavigation.NavigateToBlazorMauiPage<BlazorMauiApp1.Components.Pages.LoginPage>();
        }
        else
        {
            message = "Registration failed. Please try again.";
        }
        isLoading = false;
        StateHasChanged();
    }
    private void GoToLogin()
    {
        MauiNavigation.NavigateToBlazorMauiPage<BlazorMauiApp1.Components.Pages.LoginPage>();
    }
    public class RegisterModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
} 